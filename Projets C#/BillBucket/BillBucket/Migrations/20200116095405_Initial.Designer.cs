// <auto-generated />
using System;
using BillBucket.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BillBucket.Migrations
{
    [DbContext(typeof(BillBucketContext))]
    [Migration("20200116095405_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BillBucket.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroSiret")
                        .IsRequired()
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("NumeroTelephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("38263814-eb85-477c-9e0e-7d631c0433db"),
                            Adresse = "2 Rue du marathon",
                            Mail = "decathlon@decathlon.com",
                            Nom = "Decathlon",
                            NumeroSiret = "KFEFE4864FE8E7",
                            NumeroTelephone = "0650408090"
                        });
                });

            modelBuilder.Entity("BillBucket.Models.Facture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateEmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateReglement")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("IdClient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumeroFacture")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.ToTable("Factures");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1684d381-9138-4536-b1fc-847cc8bc200e"),
                            DateEmission = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateReglement = new DateTime(2020, 1, 16, 10, 54, 4, 901, DateTimeKind.Local).AddTicks(1558),
                            Description = "Tapis de course",
                            IdClient = new Guid("38263814-eb85-477c-9e0e-7d631c0433db"),
                            NumeroFacture = 1
                        });
                });

            modelBuilder.Entity("BillBucket.Models.Prestation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdFacture")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdFacture");

                    b.ToTable("Prestations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e63eb99-1359-42e7-82f2-9058ec677871"),
                            Description = "Nous dressons vos poules pour faire des oeufs carrés",
                            IdFacture = new Guid("1684d381-9138-4536-b1fc-847cc8bc200e"),
                            Nom = "Dressage de poules"
                        },
                        new
                        {
                            Id = new Guid("73abeec2-34d5-43f3-a237-0386c66857d8"),
                            Description = "Nous vous fournissons l'élite",
                            IdFacture = new Guid("1684d381-9138-4536-b1fc-847cc8bc200e"),
                            Nom = "Location de tueurs à gage"
                        });
                });

            modelBuilder.Entity("BillBucket.Models.Facture", b =>
                {
                    b.HasOne("BillBucket.Models.Client", "Client")
                        .WithMany("Factures")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BillBucket.Models.Prestation", b =>
                {
                    b.HasOne("BillBucket.Models.Facture", "Facture")
                        .WithMany("Prestations")
                        .HasForeignKey("IdFacture")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
